0814

https://github.com/ - 개발 협업 도구 
https://codesandbox.io/ - 온라인상에서 코딩하고 관리하는 사이트 
https://www.w3schools.com/ - w3c 듀토리얼 

- 강사님 메일 : (문준석) ministori@naver.com
-------------------------------------------------------------------------------------

- 클라이언트 서버 모델

클라이언트 -- 인터넷 -- 서버 
      |		         |	
      |		         |
 사용자		     서비스 
(웹브라우저, 	     제공자
app, 등등 ) 	         |
      |		          	
프론트 엔드 개발	   백엔드 개발


* 클라이언트 : 사용자가 사용하는 디바이스 or 실행 소프트 웨어
* 서버 : 제공자의 기기 or 서버에 사용되는 소프트 웨어



app (스마트폰) 
- ios (swift언어) 
- 안드로이드 (예전 java, 요즘 kotlin)  

웹 (web) 
: 기존의 기술을 사용하면서 최신 기술 접목 따라서, 사용하는 언어가 많음

(프론트엔드 기본 개발언어) 
html : 문서
css : 디자인 
자바스크립트 

서버 개발 언어
: php, jsp, asp(요즘은 잘 사용x), node js, 파이썬 

 * jsp : 자바와 연동하는 스크립트 언어 (우리나라에서 주 사용)

 * node js라는 언어가 개발되면서 java 스크립트로 서버 개발을 하는 경우도 많이 생김

.....
 
- 해석을 어떻게 하느냐의 차이 (언어를 번역하는 방법에 따른 분류) 

1) 인터프리터 : 동시 통역 
 - 스크립트 언어 : php, jsp , asp, basic 
2) 컴파일러 : 한 번에 많은 양을 통역 (책을 번역하는) 
 - C, C++ , java, C# 
3) 렌더링 (프론트 엔드) 
 - 브라우저 클라이언트에서 소스코드를 다운 받아 화면에 출력하는 것을 의미
(이때, 소스코드를 해석한다라는 의미로 렌더링이라는 말을 사용)
 - 시각적인 개념이 포함되어 있음. 
 - 프론트엔드에서는 시각적 개념이 표현되어있는 렌더링이라는 말을 사용한다.

md파일 -> markdown 문법






0821

강사님 
github : https://github.com/edu-ministori/frontend_08
codesendbox : https://codesandbox.io/s/itac-08-0ye9v?file=/index.html
숙제 : https://ko.wikipedia.org/wiki/HTML - 목차 만들기
html table jenerator : https://www.tablesgenerator.com/html_tables
website template free psd : https://freebiesbug.com/psd-freebies/website-template/
포토샵과 비슷한 온라인 앱 : https://www.photopea.com/

link 북마크 : 내용이 새로로 긴 경우, 링크를 클릭했을 때 페이지 전환이 아니라 해당 내용으로 jump하는 기능

 - a태그에 href 속성에 위치 값을 넣어서 사용 (단, 위치값 id앞에 #(hash: 필터링, 이동)붙인다.)
 - h태그에 id 속성을 넣어서 id값 지정
(id 속성은 이름을 붙일때 사용)


HTML Lists 

 1. 순서를 표시 할 필요가 있는 목록(An ordered HTML list, ol태그)
 2. 순서를 표시 할 필요가 없는 목록 (An unordered HTML list, ul 태그)

- ol || ul 태그 안 li(list items) 태그 포함관계 
ex.)

<ol>
	<li> </li>
</ol>


- <li> 들여쓰기: 포함관계를 이용하여 태그안에 들여쓸 태그를 추가하는 방식으로 이용




HTML Image

 - img 태그안 src속성 : 이미지 경로, 위치를 표시
 - img 태그안 alt 속성 : (변경, 대체) 만약 이미지 파일이 보이지 않으면 대체 텍스트를 넣어주는 것.

사이트내 이미지 절대 경로 (URL) : 이미지 마우스 우클릭 -> 새탭에서 이미지 열기 -> URL 복사 후 img태그 src속성에 추가
상대 주소 방식 : 코드 샌드방식에서 화살표 위 버튼을 누르고 이미지 파일 업로드 후 src 속성에 로컬 경로 추가 


HTML Media
 - video

.avi (윈도우만 사용가능)
.mov(mac환경에서만 사용가능)
.mp4(모바일때문에 만들어짐, 모바일/윈도우/mac 전부 사용 가능)

ex. )

<video>
	<source src="" type="">
</video>

 - video 태그 속성 중 controls는 html5에서 새로추가된 이름만 사용하는 속성이 있다.
 - controls는 재생 버튼등 해당 영상의 속성을 이용하는 것.
 - autoplay 속성을 사용하면 동영상이 자동 재생되어 화면에 출력 됨. 
*크롬에서는 자동영상 재생을 막아놓음 - 트래픽 영향때문, 소리를 꺼진 상태면 자동영상 재생이 가능함.
 - 이러한 문제로 인해 어느 브라우저에서든지 자동영상 출력을 위해 muted 속성을 사용해 소리를 끄는 기능을 추가한다.
 - loop 속성을 사용하면 동영상이 반복 재생이 된다.
 - 유튜브 동영상은 공유 -> 퍼가기에서 html 문장 복사 후 iframe 태그를 붙여넣어주면 된다.
*youtube=autoplay + muted 
 - > src속서에 경로뒤에 ?로 구분후 사용 
ex) 경로?autoplay=1&mute=1

 레이아웃 분석

 - 제목
 - 단락
 - 이미지
 - 목록


브라우저가 렌더링 할때 마크업 언어에서 사용되는 기호들은 헷갈려 할 수 있기 때문에 
기호를 그대로 사용하는게 아니라 그것을 대체하는 코드로 사용한다.
 -> 이것을 Entities code라고 한다.

https://www.w3schools.com/html/html_entities.asp

**** 필수 숙지 엔티티 코드**** 
 - 공백, < , > & , " , ' , copyright


Semantic Elements
 - 단지 그룹핑만해서 브라우저는 모르고 개발자들만 알던 태그들을 브라우저도 인지할 수 있게 의미를 부여한 것을
말한다. 

ex. <div id="nav"> ====> <nav> 
 - div 태그로 그룹핑만 했던 것을 nav태그로 분류해서 브라우저도 인지할 수 있게 의미를 부여함.

- <section>과 <article> 태그는 상황에 맞게 사용하면 된다.
- <div> 태그는 블록요소로 의미부여 하지 않고 단순 그룹핑 할때 사용한다.


<nav></nav>태그
 - 목차와 비슷한 기능이다. 

HTML Block and Inline Elements
 - 블록 수준 요소는 항상 새 줄에서 시작
 - 시작과 종료태그 안에 컨텐츠가 들어가는 상황에서는 해당 태그들이 영역이 생긴다.
 - 블록 수준 요소는 항상 사용 가능한 전체 너비를 차지한다. (가능한 왼쪽과 오른쪽으로 늘어남.)

*인라인 요소(Inline)
<span>태그를 사용하면 글자 수?에 따라 영역이 분리된다. 
다시말해, 길게 한줄로 넓게 사용되던 블록 수준의 영역이 실제 사용하는 만큼 영역이 나눠진다.
인라인 요소도 블록요소 마찬가지로 의미부여 하지 않고 단순 그룹핑에 사용되지만 인라인 요소로서 사용이 되는것이다.

 - <a>, <img>, <span>


<figure> (감싼다. )
 - 이미지나 컨텐츠를 감싼다. 

id, class 속성을 사용해서 태그의 컨텐츠 이름을 붙여 줄 수 있다.


CSS

<style> 태그 안에 #해시를 이용해 클래스의 color 등 다양한 디자인이 가능하다.
ex. 
<style>
	#heading{color : red;}
</style>

